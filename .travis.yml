language: node_js
node_js:
  - "10"
rvm:
- 2.6.5

cache:
  bundler: true
  yarn: true
  directories:
  - $TRAVIS_BUILD_DIR/tmp/.htmlproofer

before_install:
  - set -e
  - if [ "${TRAVIS_TAG?}" ]; then
      AWS_BUCKET="www.datacite.org";
      RACK_ENV="production";
      cp .env.master .env;
      AUTO_DEPLOY=true;
    elif [ "$TRAVIS_BRANCH" == "master" ]; then
      AWS_BUCKET="www.stage.datacite.org";
      RACK_ENV="stage";
      CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID_STAGE;
      cp .env.stage .env;
      AUTO_DEPLOY=true;
    else
      AUTO_DEPLOY=false;
    fi

  - wget https://github.com/jgm/pandoc/releases/download/1.19.2.1/pandoc-1.19.2.1-1-amd64.deb
  - sudo dpkg -i pandoc-1.19.2.1-1-amd64.deb
  - rm pandoc-1.19.2.1-1-amd64.deb

install:
  - bundle install
  - sudo pip install awscli
  - yarn install --non-interactive

script:
  - bundle exec middleman build -e $RACK_ENV
  - bundle exec htmlproofer --http-status-ignore "999,403" --allow-hash-href --empty_alt_ignore --only-4xx ./build

deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  bucket: $AWS_BUCKET
  local-dir: build
  acl: public_read
  skip_cleanup: true
  region: eu-west-1
  detect_encoding: true
  on:
    all_branches: true

after_deploy:
  - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
  - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY
  # Allow `awscli` to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distribution.
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

notifications:
  slack: datacite:Wt8En0ALoTA6Kjc5EOKNDWxN
  email: false
